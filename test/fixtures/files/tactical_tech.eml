Received: from [172.19.199.2] (mailman-core [172.19.199.2])
	by nomail.tacticaltech.org (Postfix) with ESMTP id EB5623E9E3;
	Fri,  9 Oct 2020 14:40:27 +0200 (CEST)
Authentication-Results: nomail.tacticaltech.org; dmarc=none (p=none dis=none) header.from=lists.tacticaltech.org
Authentication-Results: nomail.tacticaltech.org;
	dkim=fail reason="signature verification failed" (1024-bit key; unprotected) header.d=tacticaltech.org header.i=@tacticaltech.org header.b="GYHRjT3Q";
	dkim-atps=neutral
Received: from npomail1.electricembers.net (mail.electricembers.net [208.90.215.73])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits))
	(No client certificate requested)
	by nomail.tacticaltech.org (Postfix) with ESMTPS id B30B83EA92
	for <intheloop@lists.tacticaltech.org>; Fri,  9 Oct 2020 14:39:59 +0200 (CEST)
Authentication-Results: nomail.tacticaltech.org; dmarc=pass (p=quarantine dis=none) header.from=tacticaltech.org
Received: from private by npomail1.electricembers.net;
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=tacticaltech.org;
	s=npomail; t=1602246232;
	bh=vDm1GfZmUxw3YpANHvQbPS9aaMZkInm1xI4LCelUPIY=; l=10000;
	h=To:From:Subject:MIME-Version:Content-Type:
	 Content-Transfer-Encoding;
	b=GYHRjT3QCnN5JNeN0THOFYshAHNan+JstRA4UAzp+rvxVgq0UPgdrQHg+D/c1LZJy
	 9+V6+cLmFUvJTD6on143QC5uNojBR3XOF6gVdIbWfhK4F7ulyHyFbjlajeJmJJkzu+
	 l5nIxxDLYzY8bc2S+CjkUHpMcInfgF5NdighdKTI=
To: "intheloop@lists.tacticaltech.org" <intheloop@lists.tacticaltech.org>
Autocrypt: addr=alexander@tacticaltech.org; keydata=
 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
Message-ID: <ca16f819-d239-f377-1667-d8ddf265eae7@tacticaltech.org>
Date: Fri, 9 Oct 2020 14:23:50 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.10.0
MIME-Version: 1.0
Content-Language: en-US
Message-ID-Hash: XMETPZQU3P3THL5ZTJFLHX2LNOCPEMTP
X-Message-ID-Hash: XMETPZQU3P3THL5ZTJFLHX2LNOCPEMTP
X-MailFrom: alexander@tacticaltech.org
X-Mailman-Rule-Hits: member-moderation
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address
From: Tactical Tech Monthly Newsletter <intheloop@lists.tacticaltech.org>
X-Mailman-Version: 3.3.0
Precedence: list
Subject: [intheloop@tacticaltech] Tactical Tech's In The Loop (October 2020)
List-Id: Tactical Tech Monthly Newsletter <intheloop.lists.tacticaltech.org>
Archived-At: <https://lists.tacticaltech.org/hyperkitty/list/intheloop@lists.tacticaltech.org/message/XMETPZQU3P3THL5ZTJFLHX2LNOCPEMTP/>
List-Archive: <https://lists.tacticaltech.org/hyperkitty/list/intheloop@lists.tacticaltech.org/>
List-Help: <mailto:intheloop-request@lists.tacticaltech.org?subject=help>
List-Post: <mailto:intheloop@lists.tacticaltech.org>
List-Subscribe: <mailto:intheloop-join@lists.tacticaltech.org>
List-Unsubscribe: <mailto:intheloop-leave@lists.tacticaltech.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64

DQpJTiBUSEUgTE9PUCwgT2N0b2JlciAyMDIwDQoNCg0KKioqUkVMRUFTRVMqKioNCg0KUFJFRElD
VElWRSBGVVRVUkVTOiBUSEUgTk9STUFMSVNBVElPTiBPRiBNT05JVE9SSU5HIEFORCBTVVJWRUlM
TEFOQ0UgSU4NCkVEVUNBVElPTg0KDQpUaGlzIHN1bW1lciwgdGVucyBvZiB0aG91c2FuZHMgb2Yg
QnJpdGlzaCBzY2hvb2wgc3R1ZGVudHMgdG9vayB0byB0aGUNCnN0cmVldHMgdG8gcHJvdGVzdCB0
aGUgdXNlIG9mIGFuIGFsZ29yaXRobSB0aGF0IHByZWRpY3RlZCB0aGVpcg0KZW5kLW9mLXNjaG9v
bCBncmFkZXMuIFRoaXMgYXJ0aWNsZSBieSBEYWlzeSBLaWRkIGNvbnNpZGVycyB0aGUNCm5vcm1h
bGlzYXRpb24gb2YgbW9uaXRvcmluZyBhbmQgc3VydmVpbGxhbmNlIGluIGVkdWNhdGlvbjoNCmh0
dHBzOi8vbWVkaXVtLmNvbS9ASW5mb19BY3RpdmlzbS9wcmVkaWN0aXZlLWZ1dHVyZXMtdGhlLW5v
cm1hbGlzYXRpb24tb2YtbW9uaXRvcmluZy1hbmQtc3VydmVpbGxhbmNlLWluLWVkdWNhdGlvbi1j
MjAxZTVhNzVmOTINCg0KDQpUSEUgWk9PTSBCT09NOiBJVCBNQVRURVJTIFdISUNIIFRFQ0ggVE9P
TFMgWU9VIENIT09TRSBUTyBXT1JLIEZST00gSE9NRQ0KDQpEdWUgdG8gdGhlIHBhbmRlbWljIGFu
ZCByZXN1bHRpbmcgcXVhcmFudGluZSwgbWlsbGlvbnMgb2YgcGVvcGxlIGFyZQ0KdXNpbmcgZGln
aXRhbCB0b29scyB0byBjb250aW51ZSB0aGVpciB3b3JrIGFuZCBjb21tdW5pY2F0aW9uIGZyb20g
aG9tZS4NCk91ciBQcm9ncmFtbWUgRGlyZWN0b3IgQ2hyaXN0eSBMYW5nZSBhc2tzOiBob3cgc2Vj
dXJlIGFyZSB0aGUgZGlnaXRhbA0KdG9vbHMgdGhhdCBoYXZlIGJlY29tZSBhIHBhcnQgb2Ygb3Vy
IGV2ZXJ5ZGF5IGxpZmU/DQpodHRwczovL3d3dy5ib2VsbC5kZS9lbi8yMDIwLzA4LzMxL3RoZS16
b29tLWJvb20taXQtbWF0dGVycy13aGljaC10ZWNoLXRvb2xzLXlvdS1jaG9vc2UtdG8td29yay1m
cm9tLWhvbWUNCg0KREFUQSAmIFBPTElUSUNTOiBVS1JBSU5FIENPVU5UUlkgU1RVRFkNCg0KVGhl
IGxhdGVzdCBvZiBhIGRvemVuIGNvdW50cnkgc3R1ZGllcyBmcm9tIG91ciBEYXRhICYgUG9saXRp
Y3MgdGVhbQ0KbG9va3MgYXQgdGFyZ2V0ZWQgcG9saXRpY2FsIGNvbW11bmljYXRpb24gaW4gVWty
YWluZS4gRmluZCBvdXQgaG93DQpwZXJzb25hbCBkYXRhIGlzIHVzZWQgaW4gVWtyYWluaWFuIHBv
bGl0aWNhbCBjYW1wYWlnbnM6DQpodHRwczovL291cmRhdGFvdXJzZWx2ZXMudGFjdGljYWx0ZWNo
Lm9yZy9wb3N0cy9vdmVydmlldy11a3JhaW5lLw0KDQpUSEUgU09DSUFMIERJTEVNTUENCg0KVGhl
IHJlY2VudCBOZXRmbGl4IGRvY3VkcmFtYSAnVGhlIFNvY2lhbCBEaWxlbW1hJywgd2hpY2ggYWlt
cyB0byBoZWxwDQpjaGFuZ2UgaG93IHRlY2hub2xvZ3kgaXMgZGVzaWduZWQsIHJlZ3VsYXRlZCBh
bmQgdXNlZCwgZmVhdHVyZXMgdGhlIERhdGENCkRldG94IEtpdCBhcyBvbmUgb2YgaXRzIHN1Z2dl
c3RlZCB0b29scyB0byB0YWtlIGFjdGlvbi4gSm9pbiB0aGUNCmNvbnZlcnNhdGlvbjogaHR0cHM6
Ly93d3cudGhlc29jaWFsZGlsZW1tYS5jb20vdGFrZS1hY3Rpb24vDQoNCkRBVEEgQVMgRElHSVRB
TCBHT0xEDQoNClRvIG1hcmsgdGhlIDV0aCBhbm5pdmVyc2FyeSBvZiB0aGUgVU7igJlzIFN1c3Rh
aW5hYmxlIERldmVsb3BtZW50IEdvYWxzLA0KdGhlIEdlcm1hbiB1bWJyZWxsYSBvcmdhbmlzYXRp
b24gb2YgZGV2ZWxvcG1lbnQgTkdPcywgVkVOUk8sIHJlbGVhc2VkIGENCm5ldyByZXBvcnQgZm9j
dXNpbmcgb24gc3VzdGFpbmFibGUgZGlnaXRhbGlzYXRpb24uIFRoZSByZXBvcnQgZmVhdHVyZXMg
YQ0KY29udHJpYnV0aW9uIGJ5IFNhc2hhIE9ja2VuZGVuIGFuZCBUaGVyZXNhIEhlbm5lIG9uIHRo
ZSB1c2Ugb2YgZGF0YSBpbg0KZWxlY3Rpb25zIChpbiBHZXJtYW4pLCAnRGF0ZW4gYWxzIERpZ2l0
YWxlcyBHb2xkJzoNCmh0dHBzOi8vdmVucm8ub3JnL2ZpbGVhZG1pbi91c2VyX3VwbG9hZC9EYXRl
aWVuL0RhdGVuL1B1Ymxpa2F0aW9uZW4vU29uc3RpZ2UvbWFjaGJhcjIwMjAucGRmDQoNCg0KVEhF
IEdMQVNTIFJPT006IE1JU0lORk9STUFUSU9OIEVESVRJT04gSU4gU1dFRElTSCAmIFNMT1ZFTklB
Tg0KDQpUaGUgbGF0ZXN0IGVkaXRpb24gb2YgVGhlIEdsYXNzIFJvb20gZXhoaWJpdGlvbiwgd2hp
Y2ggZXhwbG9yZXMNCmRpZmZlcmVudCB0eXBlcyBvZiBtaXNpbmZvcm1hdGlvbiwgaG93IHRvIHJl
Y29nbmlzZSB0aGVtLCBhbmQgaG93IHRvDQpjb21iYXQgdGhlaXIgc3ByZWFkLCBpcyBub3cgYXZh
aWxhYmxlIGluIFN3ZWRpc2g6DQpodHRwczovL3RoZWdsYXNzcm9vbS5vcmcvc3YvbWlzaW5mb3Jt
YXRpb24gYW5kIFNsb3ZlbmlhbjoNCmh0dHBzOi8vdGhlZ2xhc3Nyb29tLm9yZy9zbC9uYXBhY25p
aC1pbmZvcm1hY2lqYWgvLiBNb3JlIGxhbmd1YWdlcyB3aWxsDQpiZSBjb21pbmcgc29vbiENCg0K
REFUQSBERVRPWCBLSVQgV09SS1NIT1BTDQoNCldlIGhhdmUgZGV2ZWxvcGVkIG5ldyB3b3Jrc2hv
cHMgYmFzZWQgb24gdGhlIERhdGEgRGV0b3ggS2l0IC0gd2hpY2ggaXMNCm5vdyBhdmFpbGFibGUg
aW4gMjIgZGlmZmVyZW50IGxhbmd1YWdlcyAtIGFuZCBhcmUgaGFwcHkgdG8gc2hhcmUNCm1hdGVy
aWFscyAoc2xpZGVzIGFuZCBvdXRsaW5lcykgdmlhIGVtYWlsIGluIGV4Y2hhbmdlIGZvciBmZWVk
YmFjayENClRvcGljcyBpbmNsdWRlOiBkaWdpdGFsIHByaXZhY3ksIGRlc2lnbiB0cmlja3MsIGlu
dmVzdGlnYXRpb24gYW5kDQpjb21iYXRpbmcgbWlzaW5mb3JtYXRpb24uIEZvciBtb3JlIGluZm9y
bWF0aW9uLCBwbGVhc2UgY29udGFjdDoNCmRhdGFkZXRveEB0YWN0aWNhbHRlY2gub3JnDQoNCkxB
IFRFQ0hOT0xPR0lFIEVTVCBTVFVQSURFDQoNCidUZWNobm9sb2d5IGlzIFN0dXBpZCcsIGEgbG9u
ZyByZWFkIGJ5IFRhY3RpY2FsIFRlY2gncyBDcmVhdGl2ZSBEaXJlY3Rvcg0KYW5kIGNvLWZvdW5k
ZXIgTWFyZWsgVHVzenluc2tpIHdoaWNoIGFkZHJlc3NlcyB0aGUgcXVlc3Rpb24gb2Ygd2hpY2gN
CnRlY2hub2xvZ3kgaXMgZ29vZCwgc2FmZSBhbmQgYXBwcm9wcmlhdGUgdG8gaGVscCB5b3Ugd29y
ayByZW1vdGVseQ0KZHVyaW5nIHRoZSBjb3JvbmF2aXJ1cyBwYW5kZW1pYywgaXMgbm93IGF2YWls
YWJsZSBpbiBGcmVuY2g6DQpodHRwczovL2V4cG9zaW5ndGhlaW52aXNpYmxlLm9yZy9lbi9hcnRp
Y2xlcy9sYS10ZWNobm9sb2dpZS1lc3Qtc3R1cGlkZS8NCg0KT1JHQU5JU0VSJ1MgQUNUSVZJVFkg
Qk9PSyBJTiBQT1JUVUdVRVNFDQoNClRoZSBPcmdhbmlzZXIncyBBY3Rpdml0eSBCb29rIGlzIGEg
Y29sbGVjdGlvbiBvZiBwbGF5ZnVsIGV4ZXJjaXNlcyBmcm9tDQpvdXIgRGF0YSAmIEFjdGl2aXNt
IHByb2plY3QsIGZvciBjaXZpbCBzb2NpZXR5IG9yZ2FuaXNlcnMgd2hvIHdvcmsgd2l0aA0KdGhl
IHBlcnNvbmFsIGRhdGEgb2YgaHVtYW4gcmlnaHRzIGRlZmVuZGVycywgaW52ZXN0aWdhdG9ycyBv
cg0KY2FtcGFpZ25lcnMuIFRoYW5rcyB0byBvdXIgcGFydG5lciBDYXNhIEhhY2tlciwgdGhlIEFj
dGl2aXR5IEJvb2sgaXMgbm93DQphdmFpbGFibGUgaW4gUG9ydHVndWVzZToNCmh0dHBzOi8vb3Vy
ZGF0YW91cnNlbHZlcy50YWN0aWNhbHRlY2gub3JnL3Bvc3RzL2xpdnJvLWF0aXZpZGFkZXMtdHJh
dGFtZW50by1kYWRvcy8NCg0KREFUQSAmIFBPTElUSUNTIEdVSURFQk9PSyBJTiBLSE1FUg0KDQpP
dXIgZ3VpZGVib29rIOKAmFBlcnNvbmFsIERhdGE6IFBvbGl0aWNhbCBQZXJzdWFzaW9u4oCZIGlz
IG5vdyBhdmFpbGFibGUgaW4NCktobWVyLiBUaGUgdHJhbnNsYXRpb24gd2FzIGxhdW5jaGVkIHdp
dGggYSB3b3Jrc2hvcCBvbiAybmQgT2N0b2JlciBieQ0KT3BlbiBEZXZlbG9wbWVudCBDYW1ib2Rp
YSBpbiBQaG5vbSBQZW5oLCBmZWF0dXJpbmcgYSBrZXlub3RlIHNwZWVjaCBieQ0KRHIuIEFtYmVy
IE1hY2ludHlyZSBvZiBvdXIgRGF0YSAmIFBvbGl0aWNzIHByb2plY3Q6DQpodHRwczovL291cmRh
dGFvdXJzZWx2ZXMudGFjdGljYWx0ZWNoLm9yZy9wb3N0cy9wZXJzb25hbC1kYXRhLWtoLw0KDQoN
CioqKkNBTEwgRk9SIEFQUExJQ0FUSU9OUyoqKg0KDQonRVhQT1NJTkcgVEhFIElOVklTSUJMRScg
SU5WRVNUSUdBVElWRSBJTlNUSVRVVEUNCg0KSm9pbiB1cyBmb3IgYSB0aHJlZS13ZWVrIG9ubGlu
ZSB3b3Jrc2hvcCBpbiBOb3ZlbWJlci1EZWNlbWJlciAyMDIwIG9yDQpKYW51YXJ5LUZlYnJ1YXJ5
IDIwMjEgdG8gc2hhcmUgc2tpbGxzIGFuZCB0ZWNobmlxdWVzIGZvciBzZWN1cmUNCmludmVzdGln
YXRpb25zIGFuZCBkaWdpdGFsIHJlc2VhcmNoIG1ldGhvZHMgYWNyb3NzIHRoZSBFdXJvcGVhbiBV
bmlvbi4NCldlIGFyZSBsb29raW5nIGZvciBpbnZlc3RpZ2F0aXZlIGpvdXJuYWxpc3RzLCBjaXRp
emVuIGludmVzdGlnYXRvcnMsDQphY3RpdmlzdHMgb3IgbWVtYmVycyBvZiBhbiBOR08vZ3JvdXAg
Y29uZHVjdGluZyBpbnZlc3RpZ2F0aW9ucywgYmFzZWQgaW4NCkVVIG1lbWJlciBzdGF0ZXMuDQoN
CldlIHdpbGwgd29yayB0b2dldGhlciB0byBkZXZlbG9wIG5ldyBpbnZlc3RpZ2F0aW9uIHJlc291
cmNlcyBhbmQNCnRyYWluaW5nIGN1cnJpY3VsYSB0aGF0IHlvdSBjYW4gdGFrZSBhd2F5IGFuZCB1
c2UgaW4geW91ciBvd24gY29udGV4dCwNCnRvIGhlbHAgZXhwb3Npbmcgd3Jvbmdkb2luZywgZW5o
YW5jZSB0cmFuc3BhcmVuY3kgYW5kIGJvb3N0IGNpdmljDQplbmdhZ2VtZW50LiBUaGUgZGVhZGxp
bmUgZm9yIGFwcGxpY2F0aW9ucyBpcyAxc3QgTm92ZW1iZXIgLSBzZWUgaGVyZSBmb3INCm1vcmUg
ZGV0YWlsczoNCmh0dHBzOi8vZXhwb3Npbmd0aGVpbnZpc2libGUub3JnL25ld3MvY2FsbC1mb3It
YXBwbGljYXRpb25zLWludmVzdGlnYXRpdmUtaW5zdGl0dXRlLWV1Lw0KDQoNCioqKlVQQ09NSU5H
IEVWRU5UUyoqKg0KDQpESUdJVEFMIElOTk9WQVRJT04gQU5EIENPTU1VTklUWSBCVUlMRElORw0K
DQpPbiAxMXN0IE9jdG9iZXIsIFNhZmEgR2huYWltLCBwcm9qZWN0IGxlYWQgb2Ygb3VyIERhdGEg
RGV0b3ggS2l0LCB3aWxsDQpiZSBnaXZpbmcgYSB2aXJ0dWFsIHRhbGsgYXMgcGFydCBvZiBHcmFw
aGljIERheXMgVG9yaW5vLiBUaGUgdGFsayB3aWxsDQpjb3ZlciB0aGUgcm9sZSBvZiBkaWdpdGFs
IGlubm92YXRpb24gaW4gYnVpbGRpbmcgY29tbXVuaXRpZXMgaW4gdGhlIHdha2UNCm9mIHRoZSBj
b3JvbmF2aXJ1cyBwYW5kZW1pYzoNCmh0dHBzOi8vd3d3LmdyYXBoaWNkYXlzLml0L2VuL2RpZ2l0
YWwtaW5ub3ZhdGlvbi1hbmQtY29tbXVuaXR5LWJ1aWxkaW5nLTIvDQoNCkRBVEEgREVUT1ggWCBZ
T1VUSA0KDQpBbiBvbmxpbmUgZXZlbnQgaG9zdGVkIGJ5IEdlbmVyYXRpb24gQ29kZSAyMDIwIG9u
IDEzdGggT2N0b2JlciB3aWxsDQpleHBsb3JlIERhdGEgRGV0b3ggeCBZb3V0aCwgb3VyIGd1aWRl
IHRvIGhlbHBpbmcgeW91bmcgcGVvcGxlIHdpdGgNCmRpZ2l0YWwgcHJpdmFjeSwgc2VjdXJpdHks
IHdlbGxiZWluZyBhbmQgbWlzaW5mb3JtYXRpb246DQpodHRwczovL2dlbmVyYXRpb25jb2RlLmV1
L3NjaGVkdWxlL2RhdGEtZGV0b3gteW91dGgvDQoNClRIRSBHTEFTUyBST09NOiBPRkZMSU5FIEFO
RCBPTkxJTkUNCg0KSW4gT2N0b2Jlciwgb3VyIGltbWVyc2l2ZSBzZWxmLWxlYXJuaW5nIGV4cGVy
aWVuY2UgVGhlIEdsYXNzIFJvb20gd2lsbA0KYmUgZXhoaWJpdGVkIGluOg0KDQpTw7ZkZXJoYW1u
LCBTd2VkZW46IDYtMTcgT2N0b2Jlcg0KSnViYSwgU291dGggU3VkYW46IDkgT2N0b2Jlcg0KWW9n
eWFrYXJ0YSwgSW5kb25lc2lhOiAxMS0yMSBPY3RvYmVyDQpQcmFndWUsIEN6ZWNoIFJlcHVibGlj
OiAxMiBPY3RvYmVyDQpCZXJsaW4sIEdlcm1hbnkgKGF0IHRoZSBXZWIzIFN1bW1pdCk6IDE1LTE2
IE9jdG9iZXINCkFidWphLCBOaWdlcmlhOiAyOCBPY3RvYmVyDQpLaWV2LCBVa3JhaW5lIChhcyBw
YXJ0IG9mIEdvZXRoZS1JbnN0aXR1dCBVa3JhaW5lJ3MgRGF0YSBDVFJMIENlbnRyZSk6DQozMCBP
Y3RvYmVyDQpEw7xzc2VsZG9yZiwgR2VybWFueSAoYXQgRGllIERpZ2l0YWxlIETDvHNzZWxkb3Jm
KTogMzAgT2N0b2Jlci0xNSBOb3ZlbWJlcg0KSG9uZyBLb25nLCBDaGluYSAoYXQgdGhlIE1pY3Jv
d2F2ZSBGZXN0aXZhbCk6IDMwIE9jdG9iZXItMzAgTm92ZW1iZXINCkJydXNzZWxzLCBCZWxnaXVt
OiAzMCBPY3RvYmVyLTE5IERlY2VtYmVyDQoNCk1vcmUgZGV0YWlscyBjYW4gYmUgZm91bmQgaGVy
ZTogaHR0cHM6Ly90aGVnbGFzc3Jvb20ub3JnL2V2ZW50cy8NCg0KVGhlIEdsYXNzIFJvb20gdGVh
bSB3aWxsIGFsc28gcGFydGljaXBhdGUgaW4gdGhlIGZvbGxvd2luZyBvbmxpbmUgZXZlbnRzOg0K
DQotIEhhY2s0T3BlbkdMQU0gd29ya3Nob3ANCihodHRwczovL3N1bW1pdC5jcmVhdGl2ZWNvbW1v
bnMub3JnL2hhY2s0b3BlbmdsYW0vKSBvbiAxOXRoIE9jdG9iZXINCi0gR29ldGhlLUluc3RpdHV0
IFPDo28gUGF1bG8ncyB3b3Jrc2hvcCDigJhUcmFtYXMgRGVtb2Nyw6F0aWNhc+KAmSBbRGVtb2Ny
YXRpYw0KUGxvdHNdIChodHRwczovL3d3dy5nb2V0aGUuZGUvaW5zL2JyL2RlL2t1bC9zdXAvdHJk
LzIxOTY5OTc2Lmh0bWwpIG9uDQoyMHRoIE9jdG9iZXINCi0gQ3JlYXRpdmUgQ29tbW9ucyBHbG9i
YWwgU3VtbWl0DQooaHR0cHM6Ly9jY2dsb2JhbHN1bW1pdDIwMjB2aXJ0dWFsLnNjaGVkLmNvbS9l
dmVudC9lZkNKL3RoZS1nbGFzcy1yb29tLW1pc2luZm9ybWF0aW9uLWVkaXRpb24pDQpvbiAyMHRo
IE9jdG9iZXINCg0KRmluYWxseSwgaWYgeW91J3JlIHVuYWJsZSB0byB2aXNpdCBUaGUgR2xhc3Mg
Um9vbSBpbiBwZXJzb24sIGRvbid0DQpmb3JnZXQgdGhlIE1pc2luZm9ybWF0aW9uIEVkaXRpb24g
Y2FuIGJlIHZpc2l0ZWQgb25saW5lLCBpbiBFbmdsaXNoLA0KSXRhbGlhbiwgR2VybWFuLCBGcmVu
Y2gsIFNwYW5pc2gsIFN3ZWRpc2ggYW5kIFNsb3ZlbmlhbiENCmh0dHBzOi8vdGhlZ2xhc3Nyb29t
Lm9yZy9taXNpbmZvcm1hdGlvbi8NCg0KDQoqKipQQVNUIEVWRU5UUyoqKg0KDQpERUFMSU5HIFdJ
VEggUEVSU09OQUwgREFUQSDigJMgQU4gT1JHQU5JU0VS4oCZUyBQRVJTUEVDVElWRQ0KDQpPbiAx
NnRoIFNlcHRlbWJlciwgRHIuIEFtYmVyIE1hY2ludHlyZSwgY29vcmRpbmF0b3Igb2Ygb3VyIERh
dGEgJg0KQWN0aXZpc20gcHJvamVjdCwgZ2F2ZSBhIHdvcmtzaG9wIGluIEJlcmxpbiBvbiBzYWZl
bHkgaGFuZGxpbmcgcGVyc29uYWwNCmRhdGEgd2hlbiBvcmdhbmlzaW5nIGNpdmlsIHNvY2lldHkg
ZXZlbnRzIGFuZCBkZW1vbnN0cmF0aW9ucywgYXMgcGFydCBvZg0KdGhlIERpc3J1cHRpb24gTmV0
d29yayBMYWIgQWN0aXZhdGlvbiBwcm9ncmFtbWU6DQpodHRwczovL3d3dy5kaXNydXB0aW9ubGFi
Lm9yZy9ldmVudC9wZXJzb25hbGRhdGENCg0KTUlTSU5GT1JNQVRJT04gLSBBIFBST0JMRU0gT1Ig
QSBTWU1QVE9NPw0KDQpPdXIgQ3JlYXRpdmUgRGlyZWN0b3IgTWFyZWsgVHVzenluc2tpIGdhdmUg
YSBwcmVzZW50YXRpb24gb24gMjR0aA0KU2VwdGVtYmVyIGFzIHBhcnQgb2YgdGhlIEV1cm9wZWFu
IENvbW1pc3Npb24gQ09OTkVDVCBVbml2ZXJzaXR5J3MgZXZlbnQNCidQYW5kZW1pYyB2cyBwYW5p
YzogZmlnaHRpbmcgYWdhaW5zdCBkaXNpbmZvcm1hdGlvbic6DQpodHRwczovL2VjLmV1cm9wYS5l
dS9mdXR1cml1bS9lbi9jb25uZWN0LXVuaXZlcnNpdHkvcGFuZGVtaWMtdnMtcGFuaWMtZmlnaHRp
bmctYWdhaW5zdC1kaXNpbmZvcm1hdGlvbg0KDQoNCkRFTU9DUkFUSUMgUExPVFMgQUdBSU5TVCBD
T0xMRUNUSVZFIFNUVVBJRElUWQ0KDQpNYXJlayBUdXN6eW5za2kgYWxzbyBwYXJ0aWNpcGF0ZWQg
aW4gYSBwYW5lbCBvbiA2dGggT2N0b2JlciBvcmdhbmlzZWQgYnkNCnRoZSBHb2V0aGUtSW5zdGl0
dXQgU8OjbyBQYXVsbyBjYWxsZWQgJ1RyYW1hcyBEZW1vY3LDoXRpY2FzIENvbnRyYSBhDQpFc3R1
cGlkZXogQ29sZXRpdmEnLCBhcyBwYXJ0IG9mIHRoZSAnVHJhbWFzIERlbW9jcsOhdGljYXMnIHNl
cmllcy4gV2F0Y2gNCnRoZSB2aWRlbyBpbiBQb3J0dWd1ZXNlIGFuZCBFbmdsaXNoIGhlcmU6DQpo
dHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVpMcHhZdFgwV3pjDQoNClRIRSBHTEFTUyBS
T09NIElOIEdFUk1BTlksIEJFTEdJVU0gJiBTT1VUSCBTVURBTg0KDQpUaGUgR2xhc3MgUm9vbTog
TWlzaW5mb3JtYXRpb24gRWRpdGlvbiB3YXMgaG9zdGVkIGF0IGV2ZW50cyBpbjoNCg0KQmVybGlu
LCBHZXJtYW55IChhcyBwYXJ0IG9mIHJlOnB1YmxpY2EgQ2FtcHVzKTogNyBTZXB0ZW1iZXItNCBP
Y3RvYmVyDQpKdWJhLCBTb3V0aCBTdWRhbjogMTEgU2VwdGVtYmVyDQpCcnVzc2VscywgQmVsZ2l1
bSAoYXQgdGhlIEVVJ3MgJ0NvbXB1dGVyIEVtZXJnZW5jeSBSZXNwb25zZSBUZWFtJyBBbm51YWwN
CkNvbmZlcmVuY2UpOiAxOCBTZXB0ZW1iZXINCkp1YmEsIFNvdXRoIFN1ZGFuOiAzMCBTZXB0ZW1i
ZXINCg0KVmlldyBtb3JlIHBhc3QgR2xhc3MgUm9vbSBldmVudHMgaGVyZToNCmh0dHBzOi8vdGhl
Z2xhc3Nyb29tLm9yZy9lbi9wYXN0LWV2ZW50cy8NCg0KDQoqKipUQUNUSUNBTCBURUNIIElOIFRI
RSBQUkVTUyoqKg0KDQpSRUJFTFMgV0lUSElOOiBUSEUgRkFDRUJPT0sgU1RBRkYgT1BFTkxZIENI
QUxMRU5HSU5HIFpVQ0tFUkJFUkcNCg0KIlByb3Rlc3Qg4oCTIGFuZCBvdGhlciBhY3RzIG9mIGlu
dGVybmFsIGRpc3NlbnQg4oCTIGFyZSBsaWtlbHkgdG8gd29ycnkNCltGYWNlYm9va10gbW9yZSB0
aGFuIGF0dGFja3MgZnJvbSBleHRlcm5hbCBjcml0aWNzIiAtIFZhcm9vbg0KQmFzaHlha2FybGEs
IGZyb20gb3VyIERhdGEgJiBQb2xpdGljcyB0ZWFtLCB3YXMgcXVvdGVkIGluIFRoZSBHdWFyZGlh
bg0KYWJvdXQgcmVzaWduYXRpb25zIGF0IHRoZSBzb2NpYWwgbmV0d29yay4gKFRoZSBHdWFyZGlh
bikNCmh0dHBzOi8vd3d3LnRoZWd1YXJkaWFuLmNvbS90ZWNobm9sb2d5LzIwMjAvb2N0LzA0L3Jl
YmVscy13aXRoaW4tdGhlLWZhY2Vib29rLXN0YWZmLW9wZW5seS1jaGFsbGVuZ2luZy16dWNrZXJi
ZXJnDQoNClBFUlNPTkFMIERBVEE6IEhPVyBIQVMgVEhFICdJTkZMVUVOQ0UgSU5EVVNUUlknIFNQ
UkVBRCBBQ1JPU1MgQUZSSUNBPw0KDQpEci4gQW1iZXIgTWFjaW50eXJlLCBmcm9tIG91ciBEYXRh
ICYgUG9saXRpY3MgdGVhbSwgd2FzIGludGVydmlld2VkIGJ5DQpMZSBQb2ludCBhYm91dCB0aGUg
cmlzZSBvZiBjb21wYW5pZXMgaW5mbHVlbmNpbmcgZWxlY3Rpb25zIGluDQpzdWItU2FoYXJhbiBB
ZnJpY2EuIChMZSBQb2ludCAtIGluIEZyZW5jaCkNCmh0dHBzOi8vd3d3LmxlcG9pbnQuZnIvYWZy
aXF1ZS9kb25uZWVzLXBlcnNvbm5lbGxlcy1jb21tZW50LWwtaW5kdXN0cmllLWRlLWwtaW5mbHVl
bmNlLXRyYXZlcnNlLWwtYWZyaXF1ZS0wMy0xMC0yMDIwLTIzOTQ3MjFfMzgyNi5waHA/DQoNCg0K
KioqV0hBVCBXReKAmVJFIFJFQURJTkc6IEFDVElWSVNNKioqDQoNClRXSVRURVIgSVMgQlVJTERJ
Tkcg4oCYQklSRFdBVENILOKAmSBBIFNZU1RFTSBUTyBGSUdIVCBNSVNJTkZPUk1BVElPTiBCWQ0K
QURESU5HIE1PUkUgQ09OVEVYVCBUTyBUV0VFVFMNClR3aXR0ZXIgaXMgYXR0ZW1wdGluZyB0byBh
ZGRyZXNzIG1pc2luZm9ybWF0aW9uIGFjcm9zcyBpdHMgcGxhdGZvcm0gYnkNCnByb3ZpZGluZyBt
b3JlIGNvbnRleHQgZm9yIHR3ZWV0cywgaW4gdGhlIGZvcm0gb2Ygbm90ZXMuIChUZWNoIENydW5j
aCkNCmh0dHBzOi8vdGVjaGNydW5jaC5jb20vMjAyMC8xMC8wMi90d2l0dGVyLWlzLWJ1aWxkaW5n
LWJpcmR3YXRjaC1hLXN5c3RlbS10by1maWdodC1taXNpbmZvcm1hdGlvbi1ieS1hZGRpbmctbW9y
ZS1jb250ZXh0LXRvLXR3ZWV0cy8NCg0KRElHSVRBTCBSSUdIVFMgSU4gQUZSSUNBIElTIFNUSUxM
IEZBUiBGUk9NIFRIRSBJTlRFUk5FVCBGUkVFRE9NIFdFIERFU0lSRQ0KV2hhdOKAmXMgdGhlIGZ1
dHVyZSBvZiBkaWdpdGFsIHJpZ2h0cyBpbiBBZnJpY2E/IChBZFZveCkNCmh0dHBzOi8vYWR2b3gu
Z2xvYmFsdm9pY2VzLm9yZy8yMDIwLzEwLzAyL2RpZ2l0YWwtcmlnaHRzLWluLWFmcmljYS1pcy1z
dGlsbC1mYXItZnJvbS10aGUtaW50ZXJuZXQtZnJlZWRvbS13ZS1kZXNpcmUvDQoNCkFGVEVSIFlF
QVJTIE9GIENMQUlNSU5HIElUIERPRVNOJ1QgVVNFIEZBQ0lBTCBSRUNPR05JVElPTiBTT0ZUV0FS
RSwgVEhFDQpMQVBEIEFETUlUUyBJVCBIQVMgVVNFRCBJVCAzMCwwMDAgVElNRVMgU0lOQ0UgMjAw
OQ0KVGhlIExvcyBBbmdlbGVzIFBvbGljZSBEZXBhcnRtZW50IGFwcGFyZW50bHkgbG92ZXMgdXNp
bmcgZmFjaWFsDQpyZWNvZ25pdGlvbiB0ZWNoLiBJdCBkb2Vzbid0IGxpa2UgdGFsa2luZyBhYm91
dCBpdHMgbG92ZSBmb3IgdGhpcyB0ZWNoLA0KdGhvdWdoLiAoVGVjaCBEaXJ0KQ0KaHR0cHM6Ly93
d3cudGVjaGRpcnQuY29tL2FydGljbGVzLzIwMjAwOTI3LzExNDQxMzQ1MzkzL2FmdGVyLXllYXJz
LWNsYWltaW5nLWl0LWRvZXNudC11c2UtZmFjaWFsLXJlY29nbml0aW9uLXNvZnR3YXJlLWxhcGQt
YWRtaXRzLWl0LWhhcy11c2VkLWl0LTMwMDAwLXRpbWVzLXNpbmNlLTIwMDkuc2h0bWwNCg0KKioq
V0hBVCBXReKAmVJFIFJFQURJTkc6IFBST1ZPQ0FUSU9OKioqDQoNClRIRSBSSVNLIE1BS0VSUw0K
VmlyYWwgaGF0ZSwgZWxlY3Rpb24gaW50ZXJmZXJlbmNlLCBhbmQgaGFja2VkIGFjY291bnRzOiBp
bnNpZGUgdGhlIHRlY2gNCmluZHVzdHJ54oCZcyBkZWNhZGVzLWxvbmcgZmFpbHVyZSB0byByZWNr
b24gd2l0aCByaXNrLiAoT25lIFplcm8vTWVkaXVtKQ0KaHR0cHM6Ly9vbmV6ZXJvLm1lZGl1bS5j
b20vdGhlLXJpc2stbWFrZXJzLTcyMDA5M2Q0MWYwMQ0KDQpTVVJWRUlMTEFOQ0UgSU4gQU4gRVJB
IE9GIFBBTkRFTUlDIEFORCBQUk9URVNUDQpOYW9taSBLbGVpbiwgU2hvc2hhbmEgWnVib2ZmLCBh
bmQgU2ltb25lIEJyb3duZSBkaXNjdXNzIHRoZSBkYW5nZXJzIG9mDQpzdXJ2ZWlsbGFuY2UgY2Fw
aXRhbGlzbSDigJQgYW5kIGhvdyB3ZSBjYW4gcmlzZSB0byB0aGlzIGNyaXNpcyBhbmQgY3JlYXRl
DQphIGZhaXIgYW5kIGVxdWl0YWJsZSBmdXR1cmUuIChUaGUgSW50ZXJjZXB0KQ0KaHR0cHM6Ly90
aGVpbnRlcmNlcHQuY29tLzIwMjAvMDkvMTEvY29yb25hdmlydXMtYmxhY2stbGl2ZXMtbWF0dGVy
LXN1cnZlaWxsYW5jZS8NCg0KV0hZIEFNQVpPTidTIEhPTUUgU0VDVVJJVFkgRFJPTkUgU0hPVUxE
IFNFVCBPRkYgQUxBUk0gQkVMTFMNCkdpdmVuIHRoZSBSaW5nIGJyYW5k4oCZcyBwb29yIHJlY29y
ZCBvbiBwcml2YWN5LCB3aHkgd291bGQgYW55b25lIGFsbG93DQppdHMgbmV3IGZseWluZyBleWUg
dG8gcGF0cm9sIHRoZWlyIGhvdXNlPyAoVGhlIEd1YXJkaWFuKQ0KaHR0cHM6Ly93d3cudGhlZ3Vh
cmRpYW4uY29tL2NvbW1lbnRpc2ZyZWUvMjAyMC9vY3QvMDMvd2h5LWFtYXpvbnMtaG9tZS1zZWN1
cml0eS1kcm9uZS1zaG91bGQtc2V0LW9mZi1hbGFybS1iZWxscw0KDQpXSFkgQVJFIEFNTkVTVFkg
SU5URVJOQVRJT05BTCBNT05JVE9SUyBOT1QgQUJMRSBUTyBPQlNFUlZFIFRIRSBBU1NBTkdFDQpI
RUFSSU5HPw0KSXQgaXMgaXJvbmljIHRoYXQgbm8gb25lIHJlc3BvbnNpYmxlIGZvciBwb3NzaWJs
ZSB3YXIgY3JpbWVzIGluIElyYXEgYW5kDQpBZmdoYW5pc3RhbiBoYXMgYmVlbiBwcm9zZWN1dGVk
LCBsZXQgYWxvbmUgcHVuaXNoZWQuIEFuZCB5ZXQgdGhlDQpwdWJsaXNoZXIgd2hvIGV4cG9zZWQg
dGhlaXIgY3JpbWVzIGlzIHRoZSBvbmUgaW4gdGhlIGRvY2sgZmFjaW5nIGENCmxpZmV0aW1lIGlu
IGphaWwuIChDb21tb24gRHJlYW1zL0FtbmVzdHkgSW50ZXJuYXRpb25hbCkNCmh0dHBzOi8vd3d3
LmNvbW1vbmRyZWFtcy5vcmcvdmlld3MvMjAyMC8wOS8yMi93aHktYXJlLWFtbmVzdHktaW50ZXJu
YXRpb25hbC1tb25pdG9ycy1ub3QtYWJsZS1vYnNlcnZlLWFzc2FuZ2UtaGVhcmluZw0KDQoqKipX
SEFUIFdF4oCZUkUgUkVBRElORzogSUxMVU1JTkFUSU9OKioqDQoNClRIUkVFIElOVEVSQUNUSVZF
IFRPT0xTIEZPUiBVTkRFUlNUQU5ESU5HIFBPTElDRSBTVVJWRUlMTEFOQ0UNCkFzIGxhdyBlbmZv
cmNlbWVudCBhbmQgZ292ZXJubWVudCBzdXJ2ZWlsbGFuY2UgdGVjaG5vbG9neSBjb250aW51ZXMg
dG8NCmJlY29tZSBtb3JlIGFuZCBtb3JlIGFkdmFuY2VkLCBpdCBoYXMgYWxzbyBiZWNvbWUgaGFy
ZGVyIGZvciBldmVyeWRheQ0KcGVvcGxlIHRvIGF2b2lkLiAoRWxlY3Ryb25pYyBGcm9udGllciBG
b3VuZGF0aW9uKQ0KaHR0cHM6Ly93d3cuZWZmLm9yZy9kZWVwbGlua3MvMjAyMC8wOS90aHJlZS1p
bnRlcmFjdGl2ZS10b29scy11bmRlcnN0YW5kaW5nLXBvbGljZS1zdXJ2ZWlsbGFuY2UNCg0KVEhF
IEhJR0ggUFJJVkFDWSBDT1NUIE9GIEEg4oCcRlJFReKAnSBXRUJTSVRFDQpUcmFja2VycyBwaWdn
eWJhY2tpbmcgb24gd2Vic2l0ZSB0b29scyBsZWF2ZSBzb21lIHNpdGUgb3BlcmF0b3JzIGluIHRo
ZQ0KZGFyayBhYm91dCB3aG8gaXMgd2F0Y2hpbmcgb3Igd2hhdCBtYXJrZXRlcnMgZG8gd2l0aCB0
aGUgZGF0YS4gKFRoZSBNYXJrdXApDQpodHRwczovL3RoZW1hcmt1cC5vcmcvYmxhY2tsaWdodC8y
MDIwLzA5LzIyL2JsYWNrbGlnaHQtdHJhY2tpbmctYWR2ZXJ0aXNlcnMtZGlnaXRhbC1wcml2YWN5
LXNlbnNpdGl2ZS13ZWJzaXRlcw0KDQpNQUNISU5FIExJU1RFTklORzogQ1VSUklDVUxVTQ0KT3Vy
IGRldmljZXMgYXJlIGxpc3RlbmluZyB0byB1cy4gTWFjaGluZSBsaXN0ZW5pbmcgZGVtYW5kcyBj
cml0aWNhbCBhbmQNCmFydGlzdGljIGF0dGVudGlvbi4gKExpcXVpZCBBcmNoaXRlY3R1cmUpDQpo
dHRwczovL21hY2hpbmVsaXN0ZW5pbmcuZXhwb3NlZC9jdXJyaWN1bHVtLw0KDQoNClNVUFBPUlQg
T1VSIFdPUkshDQoNCklmIHlvdSBzaGFyZSBvdXIgdmlzaW9uIGFuZCB3b3VsZCBsaWtlIHRvIHN1
cHBvcnQgdGhlIHdvcmsgd2UgZG8sIHdlDQpwcm92aWRlIHRoZSBvcHRpb24gdG8gZG9uYXRlIGRp
cmVjdGx5IHRocm91Z2ggb3VyIHdlYnNpdGU6DQpodHRwczovL3RhY3RpY2FsdGVjaC5vcmcvIy9k
b25hdGUNCg0KLS0gDQoNCkFsZXhhbmRlciBPY2tlbmRlbg0KQ29tbXVuaWNhdGlvbnMgQ29vcmRp
bmF0b3INClRlbDogKzQ5KDMwKSA0MTcxNTMzMyAob2ZmaWNlKQ0KaHR0cHM6Ly90YWN0aWNhbHRl
Y2gub3JnDQpAaW5mb19hY3RpdmlzbQ0KDQpORVcgUkVMRUFTRTogVGhlIEdsYXNzIFJvb206IE1p
c2luZm9ybWF0aW9uIEVkaXRpb24uIEhvdyBkbyB3ZSBrbm93IGlmIGENCnBpY3R1cmUsIHR3ZWV0
IG9yIHZpZGVvIGlzIGdlbnVpbmUgb3IgdHJ1dGhmdWw/IEFuZCB3aGF0IGNhbiB3ZSBkbyBpZiB3
ZQ0KY2Fu4oCZdCBiZSBzdXJlPyBodHRwczovL3RoZWdsYXNzcm9vbS5vcmcvbWlzaW5mb3JtYXRp
b24vCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmludGhl
bG9vcCBtYWlsaW5nIGxpc3QgLS0gaW50aGVsb29wQGxpc3RzLnRhY3RpY2FsdGVjaC5vcmcKVG8g
dW5zdWJzY3JpYmUgc2VuZCBhbiBlbWFpbCB0byBpbnRoZWxvb3AtbGVhdmVAbGlzdHMudGFjdGlj
YWx0ZWNoLm9yZwo=